[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "status",
        "type": "bool"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "HouseStakedStatusSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "member",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "royalty",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "RoyaltyCreatorSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "member",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "royalty",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "RoyaltyMarketSet",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newMember",
        "type": "address"
      }
    ],
    "name": "addMember",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_historyIndex",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_label",
        "type": "string"
      },
      {
        "internalType": "bool",
        "name": "_connectContract",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_image",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_brand",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_description",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_brandType",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_year",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "_otherInfo",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "_mValue",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_eValue",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "flag",
        "type": "bool"
      }
    ],
    "name": "addOrEditHistoryType",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "allowedList",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllHistoryTypes",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "hLabel",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "connectContract",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "imgNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "brandNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "descNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "brandTypeNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "yearNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "otherInfo",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "mValue",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "eValue",
            "type": "uint256"
          }
        ],
        "internalType": "struct Marketplace.HistoryType[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_typeId",
        "type": "uint256"
      }
    ],
    "name": "getHistoryTypeById",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "hLabel",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "connectContract",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "imgNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "brandNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "descNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "brandTypeNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "yearNeed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "otherInfo",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "mValue",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "eValue",
            "type": "uint256"
          }
        ],
        "internalType": "struct Marketplace.HistoryType",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getLabelPercents",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "connectContract",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "image",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "brand",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "desc",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "brandType",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "year",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "otherInfo",
            "type": "uint256"
          }
        ],
        "internalType": "struct Marketplace.LabelPercent",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getRoyalties",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "hTypeCounter",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "labelPercent",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "connectContract",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "image",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "brand",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "desc",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "brandType",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "year",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "otherInfo",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "member",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_hIndex",
        "type": "uint256"
      }
    ],
    "name": "removeHistoryType",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newMember",
        "type": "address"
      }
    ],
    "name": "removeMember",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "royaltyCreator",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "royaltyMarket",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "connectContract",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "image",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "brand",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "desc",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "brandType",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "year",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "otherInfo",
            "type": "uint256"
          }
        ],
        "internalType": "struct Marketplace.LabelPercent",
        "name": "newLabelPercent",
        "type": "tuple"
      }
    ],
    "name": "setLabelPercents",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_royalty",
        "type": "uint256"
      }
    ],
    "name": "setRoyaltyCreator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_royalty",
        "type": "uint256"
      }
    ],
    "name": "setRoyaltyMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]